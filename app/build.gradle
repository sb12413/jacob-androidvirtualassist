apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.example.jacob.androidvirtualassistant"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 2
        versionName "1.3.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.firebase:firebase-client-android:2.3.1'
    compile 'com.google.android.gms:play-services-auth:8.4.0'
    compile 'com.google.android.gms:play-services:9.0.0'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
}

// The location of the android libs in the SDK distributable
File androidLibsDir = file('../../../lib/android')

// These copy{..} operations are performed at configuration time
if (!file('libs/vncsdk.jar').exists()) {
    println 'Copying SDK libs into place'
    copy {
        from androidLibsDir
        into file('src/main/jniLibs')
        include '**/*.so.*.*'
        rename '(.*).so.[0-9]+.[0-9]+', '$1.so' // Remove trailing '.x.y' from filenames

    }

    copy {
        from file(androidLibsDir.getPath() + '/vncsdk.jar')
        into file('libs')
    }
}